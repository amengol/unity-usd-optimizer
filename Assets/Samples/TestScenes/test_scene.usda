#usda 1.0
(
    "Test scene for USD Scene Optimizer"
    defaultPrim = "World"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "World" (
    kind = "group"
)
{
    def Xform "Geometries" (
        kind = "group"
    )
    {
        def Mesh "Cube"
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [
                0, 1, 2, 3,
                4, 5, 6, 7,
                0, 4, 7, 3,
                1, 5, 6, 2,
                2, 6, 7, 3,
                0, 1, 5, 4
            ]
            point3f[] points = [
                (-1, -1, -1),
                (1, -1, -1),
                (1, 1, -1),
                (-1, 1, -1),
                (-1, -1, 1),
                (1, -1, 1),
                (1, 1, 1),
                (-1, 1, 1)
            ]
            normal3f[] normals = [
                (0, 0, -1),
                (0, 0, 1),
                (1, 0, 0),
                (-1, 0, 0),
                (0, 1, 0),
                (0, -1, 0)
            ]
            texCoord2f[] primvars:st = [
                (0, 0),
                (1, 0),
                (1, 1),
                (0, 1),
                (0, 0),
                (1, 0),
                (1, 1),
                (0, 1)
            ]
            int[] primvars:st:indices = [
                0, 1, 2, 3,
                4, 5, 6, 7,
                0, 4, 7, 3,
                1, 5, 6, 2,
                2, 6, 7, 3,
                0, 1, 5, 4
            ]
        }

        def Mesh "Sphere"
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [
                0, 1, 2, 3,
                4, 5, 6, 7,
                8, 9, 10, 11,
                12, 13, 14, 15,
                16, 17, 18, 19,
                20, 21, 22, 23,
                0, 4, 7, 3,
                1, 5, 6, 2,
                8, 12, 15, 11,
                9, 13, 14, 10,
                16, 20, 23, 19,
                17, 21, 22, 18
            ]
            point3f[] points = [
                (-1, -1, -1),
                (1, -1, -1),
                (1, 1, -1),
                (-1, 1, -1),
                (-1, -1, 1),
                (1, -1, 1),
                (1, 1, 1),
                (-1, 1, 1),
                (-0.5, -0.5, -0.5),
                (0.5, -0.5, -0.5),
                (0.5, 0.5, -0.5),
                (-0.5, 0.5, -0.5),
                (-0.5, -0.5, 0.5),
                (0.5, -0.5, 0.5),
                (0.5, 0.5, 0.5),
                (-0.5, 0.5, 0.5),
                (-0.25, -0.25, -0.25),
                (0.25, -0.25, -0.25),
                (0.25, 0.25, -0.25),
                (-0.25, 0.25, -0.25),
                (-0.25, -0.25, 0.25),
                (0.25, -0.25, 0.25),
                (0.25, 0.25, 0.25),
                (-0.25, 0.25, 0.25)
            ]
            normal3f[] normals = [
                (0, 0, -1),
                (0, 0, 1),
                (1, 0, 0),
                (-1, 0, 0),
                (0, 1, 0),
                (0, -1, 0)
            ]
            texCoord2f[] primvars:st = [
                (0, 0),
                (1, 0),
                (1, 1),
                (0, 1),
                (0, 0),
                (1, 0),
                (1, 1),
                (0, 1)
            ]
            int[] primvars:st:indices = [
                0, 1, 2, 3,
                4, 5, 6, 7,
                0, 4, 7, 3,
                1, 5, 6, 2,
                2, 6, 7, 3,
                0, 1, 5, 4
            ]
        }

        def Xform "Instances" (
            kind = "group"
        )
        {
            def Xform "Instance1" (
                instanceable = true
                references = </World/Geometries/Cube>
            )
            {
                double3 xformOp:translate = (2, 0, 0)
            }

            def Xform "Instance2" (
                instanceable = true
                references = </World/Geometries/Sphere>
            )
            {
                double3 xformOp:translate = (-2, 0, 0)
            }
        }
    }
} 